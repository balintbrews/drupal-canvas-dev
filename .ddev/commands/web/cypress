#!/bin/bash

## Description: Drupal Canvas: Run Cypress in open mode or headless mode (when --spec is used)
## Aliases: cy
## Usage: cypress [--component|-c] [--spec <spec>]
## Example: "ddev cypress", "ddev cy", "ddev cypress --component", "ddev cy -c", "ddev cypress --spec cypress/e2e/example.cy.js"

# Parse command line arguments.
COMPONENT_TESTING_MODE_FLAG=false
SPEC_FLAG=""
while [[ $# -gt 0 ]]; do
    case $1 in
        --component|-c)
            COMPONENT_TESTING_MODE_FLAG=true
            shift
            ;;
        --spec)
            if [[ -n "$2" && "$2" != -* ]]; then
                SPEC_FLAG="$2"
                shift 2
            else
                echo "Error: --spec flag requires a value"
                echo "Usage: cypress [--component|-c] [--spec <spec>]"
                exit 1
            fi
            ;;
        *)
            echo "Unknown option: $1"
            echo "Usage: cypress [--component|-c] [--spec <spec>]"
            exit 1
            ;;
    esac
done

cd "$DDEV_COMPOSER_ROOT/web/modules/contrib/canvas/ui" || exit

# Verify if the Cypress binary is installed.
if ! npm run cy:verify >/dev/null 2>&1; then
    # Verify that the Cypress package (npm dependency) is installed.
    # It is supposed to be installed as a UI dependency by `npm install`.
    if [ ! -f "node_modules/.bin/cypress" ]; then
        echo
        echo "Error: Cypress package not found."
        echo
        echo "To fix this, run:"
        echo "  ddev npm install"
        echo
        echo "This will install dependencies for the UI."
        echo
        exit 1
    fi
    # Install the binary using the npm package.
    echo "Installing Cypress binary…"
    npx cypress install
fi
# Create a config file to dismiss the initial welcome message.
CYPRESS_CONFIG_DIR="$HOME/.config/Cypress/cy/production/projects/__global__"
if [ ! -f "$CYPRESS_CONFIG_DIR/state.json" ]; then
    mkdir -p $CYPRESS_CONFIG_DIR
    echo "{\"majorVersionWelcomeDismissed\": {\"13\": $(date +%s)}}" > $CYPRESS_CONFIG_DIR/state.json
fi

# Prepare spec argument
SPEC_ARG=""
if [ -n "$SPEC_FLAG" ]; then
    SPEC_ARG="--spec $SPEC_FLAG"
fi

# Run Cypress - use headless mode (cy:run) when --spec is provided
if [ -n "$SPEC_FLAG" ]; then
    echo "Starting Cypress in headless mode (--spec provided)…"
    if [ "$COMPONENT_TESTING_MODE_FLAG" = true ]; then
        npm run cy:run -- --browser chromium --component $SPEC_ARG
    else
        npm run cy:run -- --browser chromium --e2e $SPEC_ARG
    fi
else
    echo "Starting Cypress…"
    echo
    echo "╔═══════════ OPEN IN YOUR BROWSER: ════════════════╗"
    echo "║                                                  ║"
    echo "║     https://canvas.ddev.site:6081/vnc.html       ║"
    echo "║                                                  ║"
    echo "╚══════════════════════════════════════════════════╝"
    
    if [ "$COMPONENT_TESTING_MODE_FLAG" = true ]; then
        npm run cy:open -- --browser chromium --component
    else
        npm run cy:open -- --browser chromium --e2e
    fi
fi
