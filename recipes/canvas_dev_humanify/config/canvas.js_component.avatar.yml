langcode: en
status: false
dependencies: {}
machineName: avatar
name: Avatar
required: {}
props:
  photo:
    title: Photo
    type: object
    examples:
      - src: "https://placehold.co/600x600@2x.png?alternateWidths=https%3A%2F%2Fplacehold.co%2F%7Bwidth%7Dx%7Bheight%7D%402x.png"
        alt: "Example image placeholder"
        width: 600
        height: 600
    $ref: "json-schema-definitions://canvas.module/image"
slots: {}
js:
  original: |-
    import Image from "next-image-standalone";

    const Component = ({ photo }) => {
      const { src, alt, width, height } = photo;
      return (
        <div className="size-24 overflow-hidden rounded-full shadow-md sm:size-32">
          <Image
            {...{ src, alt, width, height }}
            sizes="(max-width: 40rem) 4rem, 6rem"
          />
        </div>
      );
    };

    export default Component;
  compiled: |
    import { jsx as _jsx } from "react/jsx-runtime";
    import Image from "next-image-standalone";
    const Component = ({ photo })=>{
        const { src, alt, width, height } = photo;
        return /*#__PURE__*/ _jsx("div", {
            className: "size-24 overflow-hidden rounded-full shadow-md sm:size-32",
            children: /*#__PURE__*/ _jsx(Image, {
                src,
                alt,
                width,
                height,
                sizes: "(max-width: 40rem) 4rem, 6rem"
            })
        });
    };
    export default Component;
css:
  original: ""
  compiled: |
    /*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
dataDependencies: {}
